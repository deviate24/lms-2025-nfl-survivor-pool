# Generated by Django 4.2.21 on 2025-05-08 20:54

from django.db import migrations
from django.utils import timezone


def convert_dates_to_datetime(apps, schema_editor):
    # Get the historical model
    Week = apps.get_model('pool', 'Week')
    
    # Iterate through all weeks and convert date fields to datetime
    for week in Week.objects.all():
        # Check if the start_date is already a datetime object
        if not isinstance(week.start_date, timezone.datetime):
            # Convert date to datetime with midnight time
            if hasattr(week.start_date, 'year'):
                # It's a date object
                week.start_date = timezone.datetime(
                    year=week.start_date.year,
                    month=week.start_date.month,
                    day=week.start_date.day,
                    hour=0, minute=0, second=0,
                    tzinfo=timezone.get_current_timezone()
                )
        
        # Check if the end_date is already a datetime object
        if not isinstance(week.end_date, timezone.datetime):
            # Convert date to datetime with 11:59:59 PM time
            if hasattr(week.end_date, 'year'):
                # It's a date object
                week.end_date = timezone.datetime(
                    year=week.end_date.year,
                    month=week.end_date.month,
                    day=week.end_date.day,
                    hour=23, minute=59, second=59,
                    tzinfo=timezone.get_current_timezone()
                )
        
        # Save the changes
        week.save()


class Migration(migrations.Migration):

    dependencies = [
        ('pool', '0005_alter_week_end_date_alter_week_start_date'),
    ]

    operations = [
        migrations.RunPython(convert_dates_to_datetime),
    ]
